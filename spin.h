/*spin.h======Author:		Greg EganDate:		24 September 2001Version:	1.0This header file contains options, includes, function declarations, and macrosfor the "tenJ" package.*///	OPTIONS://	--------//	Do we compute factorial ratios with floating point calculations, or//	with PrimePowers structures?#define USE_PRIME_POWERS true//	Define the floating point types to be used in various routines.//	These would normally be defined as either "double" or "long double".	//	* for factorial ratio calculations	typedef double FACTfloat;//	typedef long double FACTfloat;		//	* for tet network calculations		typedef double TETfloat;//	typedef long double TETfloat;		//	* for tenJ symbol calculations		typedef double TENJfloat;//	typedef long double TENJfloat;//	Do we compute tenJ symbols with separate tets and thetas, or do we//	merge the ratios into a single routine?#define MERGE_TET_THETA true//	INCLUDES://	---------//	Standard library routines#include <math.h>#include <stdio.h>#include <stdlib.h>#include <time.h>//	FUNCTION DECLARATIONS://	----------------------//	multiRatio() computes the product of several ratios of factorialsFACTfloat multiRatio(int *num, int *den, int size);//	theta() computes the unnormalised value of a theta netFACTfloat theta(int twoJ1, int twoJ2, int twoJ3);//	tet() computes the unnormalised value of a tetrahedral netTETfloat tet(int a, int b, int c, int d, int e, int f);//	tetOnThetas() computes a tet divided by two thetasTETfloat tetOnThetas(int a, int b, int c, int d, int e, int f,	int twoJ1a, int twoJ2a, int twoJ3a, int twoJ1b, int twoJ2b, int twoJ3b);//	tenJ() routines for general spins, regular spinsTENJfloat tenJ(int *twoJ1, int *twoJ2);TENJfloat tenJ(int twoJ);//	MACROS://	-------#define mod5(i) (i+5)%5#define min(a,b) ((a)<(b))?(a):(b)#define max(a,b) ((a)>(b))?(a):(b)#define abs(a) ((a)>=0)?(a):(-(a))